while not end:
        curr = configs[level][index]

        if curr[1] == ntm['accept']: 
            end_type = 'accepted'
            break
        
        if len(configs) == level + 1:
            configs.append([])

        if curr[1] != ntm['reject']:
            transition_made = False
            for next in ntm[curr[1]]:
                # Check if input symbol matches next on tape. 
                if next[0] == curr[2][0]:
                    transition_made = True
                    # Move head right
                    if next[3] == 'R':
                        # Checks 
                        if next[2] != "":
                            if curr[2][1:] == "":
                                # Adds blank when at end of line
                                configs[level+1].append([curr[0]+next[2], next[1], '_'])
                            else:
                                configs[level+1].append([curr[0]+next[2], next[1], curr[2][1:]])
                        # else:
                        #     if curr[2][1:] == "":
                        #         configs[level+1].append([curr[0]+curr[2][0], next[1], '_'])
                        #     else:
                        #         configs[level+1].append([curr[0]+curr[2][0], next[1], curr[2][1:]])
                    # Move head left
                    elif next[3] == 'L':
                        # Checks end of tape
                        if next[2] != "":
                            # End of tape not blank, check if blank after next character, adds to config accordingly
                            if curr[2][1:] == "":
                                configs[level+1].append([curr[0][:-1], next[1], curr[0][-1]+next[2]])
                            else:
                                configs[level+1].append([curr[0][:-1], next[1], curr[0][-1]+next[2]+curr[2][1:]])
                        # else:
                        #     # Adds blank when at end of line
                        #     # End of tape is blank, check if blank after next character, adds to config accordingly
                        #     if curr[2][1:] == "":
                        #         configs[level+1].append([curr[0][:-1], next[1], curr[0][-1]+curr[0][-1]])
                        #     else:
                        #         configs[level+1].append([curr[0][:-1], next[1], curr[0][-1]+curr[0][-1]+curr[2][1:]])
            # Rejects if no transitions made with current input